
import asyncio
import json
import logging
import os
import threading
import time
import pika



_message_number = None
import datetime


def push_audio_inference(channel:pika.BlockingConnection.channel):

    # Declare the queue
    # channel.queue_declare(
    #     queue="radiostData", durable=True, exclusive=False, auto_delete=False
    # )
    # channel.queue_bind("radiostData",'radadspread_analytics',
    #                              "radspdrdsc###0000*")
    channel.confirm_delivery()
    payload =  {
  "filename": "img-1651222381514560728.jpeg",
  "fileData": ""
}


    properties = pika.BasicProperties(app_id='example-publisher',
                correlation_id = "test",
                                          content_type='application/json')
      
    i = 5
    while i < 10:
        try:
            channel.basic_publish(
                'risigner_analytics',
                "bb15965d7967f3",
                json.dumps(payload).encode("utf-8"),
                properties
            )
            print("Message publish was confirmed")
            
        except pika.exceptions.UnroutableError:
            print("Message could not be confirmed")
        time.sleep(10)
    # connection.close()
